name: CI

on:
  push:
    branches: [main]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: ["*"]

jobs:
  spellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn

      - run: yarn install --frozen-lockfile
      - run: echo '::add-matcher::.github/cspell-problem-matcher.json'
      - run: yarn spellcheck --no-progress

  conformance-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn workspace @foxglove/mcap-conformance lint:ci
      - run: yarn workspace @foxglove/mcap-conformance typecheck

  conformance-cpp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - uses: actions/cache@v2
        with:
          path: ~/.conan/data
          key: ${{ runner.os }}-${{ hashFiles('~/.conan/data') }}
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - run: cd cpp && make ci
      - run: yarn install --frozen-lockfile
      - run: yarn test:conformance:generate-inputs --verify
      - run: yarn test:conformance --runner cpp-

  conformance-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - run: cd go && make build-conformance-binaries
      - run: yarn install --frozen-lockfile
      - run: yarn test:conformance:generate-inputs --verify
      - run: yarn test:conformance --runner go-

  conformance-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - uses: actions/setup-python@v2
      - run: cd python && pip install .
      - run: yarn install --frozen-lockfile
      - run: yarn test:conformance:generate-inputs --verify
      - run: yarn test:conformance --runner py-

  conformance-typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn test:conformance:generate-inputs --verify
      - run: yarn test:conformance --runner ts-

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn

      - run: yarn install --frozen-lockfile
      - run: yarn lint:docs

  cpp:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cpp
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.conan/data
          key: ${{ runner.os }}-${{ hashFiles('~/.conan/data') }}
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - run: make ci-format-check
      - run: make ci
      - run: make test-host

  typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn workspace @foxglove/mcap lint:ci
      - run: yarn workspace @foxglove/mcap typecheck
      - run: yarn workspace @foxglove/mcap test

  typescript-examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn
      - run: yarn install --frozen-lockfile
      - run: yarn workspace @foxglove/mcap-example-validate lint:ci
      - run: yarn workspace @foxglove/mcap-example-validate typecheck

  python:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8
          cache: pipenv
      - run: pip install pipenv
      - run: pipenv install --dev --deploy
      - run: pipenv run black --check --diff --color .
      - run: pipenv run pyright mcap tests
      - run: pipenv run python -m build

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          packages_dir: python/dist
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - name: Publish to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/releases/python/v') }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: python/dist

  go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: go
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17.x
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.44.0
      - run: make lint
      - run: make test
