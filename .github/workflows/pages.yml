name: Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: ["*"]

jobs:
  pages-home:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn

      - name: Build documentation site
        run: |
          yarn install --frozen-lockfile
          yarn docs:build --minify

      - uses: actions/upload-artifact@v3
        with:
          name: __home__
          path: docs/website
          retention-days: 1

  pages-cpp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - run: mkdir __docs__
      - name: Generate C++ documentation
        run: cd cpp && make ci-docs

      - run: tar -czf docs-cpp.tgz __docs__/cpp
      - uses: actions/upload-artifact@v3
        with:
          name: docs-cpp
          path: docs-cpp.tgz
          retention-days: 1

  pages-typescript:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: yarn

      - run: mkdir __docs__
      - name: Generate TypeScript documentation
        run: |
          yarn install --frozen-lockfile
          yarn typedoc

      - run: tar -czf docs-typescript.tgz __docs__/typescript
      - uses: actions/upload-artifact@v3
        with:
          name: docs-typescript
          path: docs-typescript.tgz
          retention-days: 1

  pages-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
          cache: pipenv

      - run: mkdir __docs__
      - name: Generate Python documentation
        run: |
          set -x
          cd python
          pip install pipenv
          pipenv install --dev --deploy
          pipenv run sphinx-apidoc --separate --tocfile index --output-dir docs/apidoc mcap
          pipenv run sphinx-build docs ../__docs__/python

      - run: tar -czf docs-python.tgz __docs__/python
      - uses: actions/upload-artifact@v3
        with:
          name: docs-python
          path: docs-python.tgz
          retention-days: 1

  pages-swift:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: fwal/setup-swift@v1
        with:
          swift-version: "5.6"

      - run: mkdir __docs__
      - name: Generate Swift documentation
        run: |
          set -x
          swift package \
            --allow-writing-to-directory __docs__ \
            generate-documentation --target mcap \
            --output-path __docs__/swift \
            --disable-indexing \
            --transform-for-static-hosting \
            --hosting-base-path docs/swift

      # https://github.com/actions/upload-artifact/issues/85
      - run: tar -czf docs-swift.tgz __docs__/swift
      - uses: actions/upload-artifact@v3
        with:
          name: docs-swift
          path: docs-swift.tgz
          retention-days: 1

  pages-publish:
    needs:
      - pages-home
      - pages-cpp
      - pages-typescript
      - pages-python
      - pages-swift
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: Prepare working directory
        run: git rm -r .

      - uses: actions/download-artifact@v3
      - name: Prepare GitHub Pages
        run: |
          set -x

          # Extract main site
          find __home__ -mindepth 1 -maxdepth 1 -exec mv {} ./ \;
          rm -rf __home__

          # Extract generated API docs
          for f in docs-*/*.tgz; do tar -xf $f; done
          mv __docs__ docs
          rm -rf docs-*

          git add --all
          git diff --cached --stat

      - name: Push updates to GitHub Pages
        if: github.ref == 'refs/heads/main'
        run: |
          if git diff --cached --quiet; then
            echo "No changes to publish"
          else
            set -x
            git config user.name "Foxglove"
            git config user.email "contact@foxglove.dev"
            git commit -m "Update docs from $GITHUB_REF_NAME (${GITHUB_SHA::7})"
            git push origin gh-pages
          fi
